generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED") 
}

enum Direction {
  debit
  credit
}

model Account {
  id     String        @id @default(uuid())
  userId String
  name   String
  tx     Transaction[]
}

model Merchant {
  id             String        @id @default(uuid())
  displayName    String
  normalizedName String?       @unique
  tx             Transaction[]
}

model Category {
  id    String        @id @default(uuid())
  code  String        @unique
  name  String
  tx    Transaction[]
  budget Budget[]
}

model Transaction {
  id              String     @id @default(uuid())
  accountId       String
  postedAt        DateTime
  amountCents     Int
  rawDescription  String
  direction       Direction
  merchantId      String?
  categoryId      String?
  tags            String[]   @default([])
  enrichmentVersion Int      @default(0)

  account   Account   @relation(fields: [accountId], references: [id])
  merchant  Merchant? @relation(fields: [merchantId], references: [id])
  category  Category? @relation(fields: [categoryId], references: [id])

  @@unique([accountId, postedAt, amountCents, rawDescription])
  @@index([accountId, postedAt(sort: Desc)])
  @@index([categoryId, postedAt(sort: Desc)])
  @@index([merchantId, postedAt(sort: Desc)])
}

model Budget {
  id           String   @id @default(uuid())
  userId       String
  categoryId   String
  month        DateTime // store as first day of month
  amountCents  Int

  category Category @relation(fields: [categoryId], references: [id])

  @@unique([userId, categoryId, month])
}

model Insight {
  id        String   @id @default(uuid())
  userId    String
  createdAt DateTime @default(now())
  type      String
  payload   Json
}

model OutboxEvent {
  id          BigInt   @id @default(autoincrement())
  kind        String
  payload     Json
  processedAt DateTime?
  @@index([processedAt])
}

model AuditLog {
  id      BigInt   @id @default(autoincrement())
  ts      DateTime @default(now())
  kind    String
  refId   String?
  payload Json
}
